class Solution {
  public:
  
  bool solve(vector<int>& arr, int sum, int idx,vector<vector<int>>&dp){
      
      if(sum == 0) return true;
      if(sum<0 || idx>=arr.size()) return false;
      if(dp[idx][sum]!=-1) return dp[idx][sum];
      bool inc = solve(arr,sum-arr[idx],idx+1,dp);
      bool exc = solve(arr,sum,idx+1,dp);
      
      return dp[idx][sum] = (inc||exc);
  }
  
    bool equalPartition(vector<int>& arr) {
       
        int target = accumulate(arr.begin(),arr.end(),0);
        if(target%2) return false;
        int sum = target/2;
        int n = arr.size();
        vector<vector<int>>dp(arr.size()+1,vector<int>(sum+1,-1));
        
        return solve(arr,sum,0,dp);
    }
};
