class Solution {
  public:
  int solve(vector<int>& coins, int sum, int idx,vector<vector<int>>&dp){
      
      if(sum == 0) return 1;
      if(sum<0) return 0;
      if(idx == coins.size()) return 0;
      if(dp[idx][sum]!=-1) return dp[idx][sum];
      
    //   if(sum<coins[idx]){
    //       return solve(coins,sum,idx+1);
    //   }
    //   else{
          return dp[idx][sum] = solve(coins,sum-coins[idx],idx,dp)+solve(coins,sum,idx+1,dp);
    //   }
  }
    int count(vector<int>& coins, int sum) {
       
        int n = coins.size();
        sort(coins.begin(),coins.end());
        vector<vector<int>>dp(n+1,vector<int>(sum+1,-1));
        
       return solve(coins,sum,0,dp);
    }
};
